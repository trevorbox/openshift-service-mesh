apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: certificatedurationrenewal
  annotations:
    description: Prohibits wildcard host configuration
spec:
  crd:
    spec:
      names:
        kind: CertificateDurationRenewal
      validation:
        openAPIV3Schema:
          type: object
          properties:
            maxDuration:
              type: string
            maxRenewBefore:
              type: string
  targets:
  - target: admission.k8s.gatekeeper.sh
    rego: |-
      package certificatedurationrenewal

      max_duration := time.parse_duration_ns(input.parameters.maxDuration)
      max_renew_before := time.parse_duration_ns(input.parameters.maxRenewBefore)
      
      certificate := input.review.object

      violation[{"msg": msg}] {
        not certificate.spec.duration
        msg := sprintf("Certificate spec.duration must be defined and must be no greater than <%v>.", [input.parameters.maxDuration])
      }

      violation[{"msg": msg}] {
        not certificate.spec.renewBefore
        msg := sprintf("Certificate spec.renewBefore must be defined and must be no greater than <%v>.", [input.parameters.maxRenewBefore])
      }

      violation[{"msg": msg}] {
        duration := time.parse_duration_ns(certificate.spec.duration)
        duration > max_duration
        msg := sprintf("Certificate spec.duration: <%v> must be no greater than <%v>.", [ certificate.spec.duration, input.parameters.maxDuration ])
      }
      
      violation[{"msg": msg}] {
        renew_before := time.parse_duration_ns(certificate.spec.renewBefore)
        renew_before > max_renew_before
        msg := sprintf("Certificate spec.renewBefore: <%v> must be no greater than <%v>.", [ certificate.spec.renewBefore, input.parameters.maxRenewBefore ])
      }
