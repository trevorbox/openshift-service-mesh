config:
  existingSecret: oauth2-proxy
  configFile: |-
    provider = "oidc"
    redirect_url = "https://oauth-bookinfo-istio-ingress.apps-crc.testing/oauth2/callback"
    oidc_issuer_url = "https://dev-tqolyn342htgbviz.us.auth0.com/"
    upstreams = [
        "http://oauth2-proxy-upstream.oauth2-proxy.svc.cluster.local:80"
    ]
    email_domains = "*"
    # pass_access_token = true
    # set_authorization_header = true
    pass_authorization_header = true
    skip_provider_button = false
    # Note: use the following for testing within a container
    http_address = "0.0.0.0:4180"
    cookie_csrf_per_request = true
    cookie_csrf_expire = "5m"
    oidc_email_claim = "sub"
    pass_host_header = false
    skip_jwt_bearer_tokens = true
    login_url = "https://dev-tqolyn342htgbviz.us.auth0.com/authorize?audience=https://bookinfo-istio-ingress.apps-crc.testing"
    oidc_jwks_url = "https://dev-tqolyn342htgbviz.us.auth0.com/.well-known/jwks.json"
    redeem_url = "https://dev-tqolyn342htgbviz.us.auth0.com/oauth/token"
    skip_oidc_discovery = true
podLabels: 
  sidecar.istio.io/inject: 'true'
podAnnotations: 
  sidecar.istio.io/inject: 'true'
securityContext:
  enabled: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 
  runAsGroup: 
  seccompProfile:
    type: RuntimeDefault
