apiVersion: kiali.io/v1alpha1
kind: Kiali
metadata:
  name: kiali
  namespace: istio-system
spec:
  api:
    namespaces:
      exclude:
      - "^istio-operator"
      - "^kube-.*"
      - "^openshift.*"
      - "^ibm.*"
      - "^kiali-operator"
      label_selector_include: "istio.io/rev=ossm-2.5"
  auth:
    strategy: openshift
  deployment:
    cluster_wide_access: true
    image_pull_policy: ''
    ingress:
      enabled: true
    namespace: istio-system
    pod_labels:
      sidecar.istio.io/inject: "false"
      maistra.io/expose-route: "true"
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    logger:
      log_level: debug
  external_services:
    custom_dashboards:
      namespace_label: kubernetes_namespace
    # grafana:
    #   auth:
    #     password: {{ .Values.htpasswd }}
    #     type: none
    #     use_kiali_token: false
    #     username: internal
    #   enabled: true
    #   in_cluster_url: 'http://grafana-instance-service.istio-system.svc:3000'
    #   url: {{ .Values.kiali.grafana.url }}
    grafana:
      enabled: true
      # Grafana service name is "grafana" and is in the "telemetry" namespace.
      in_cluster_url: 'http://grafana-instance-service.istio-system.svc:3000'
      # Public facing URL of Grafana
      url: # TODO
      dashboards:
      - name: "Istio Service Dashboard"
        variables:
          namespace: "var-namespace"
          service: "var-service"
      - name: "Istio Workload Dashboard"
        variables:
          namespace: "var-namespace"
          workload: "var-workload"
      - name: "Istio Mesh Dashboard"
      - name: "Istio Control Plane Dashboard"
      - name: "Istio Performance Dashboard"
      - name: "Istio Wasm Extension Dashboard"
    istio:
      config_map_name: istio-istio-ossm-2-5
      istio_sidecar_injector_config_map_name: istio-sidecar-injector-istio-ossm-2-5
      istiod_deployment_name: istiod-istio-ossm-2-5
      url_service_version: 'http://istiod-istio-ossm-2-5.istio-system:15014/version'
      root_namespace: istio-system
      component_status:
        enabled: true
        components:
        - app_label: istiod
          is_core: true
        - app_label: istio-ingressgateway
          is_core: true
          is_proxy: true
          namespace: istio-ingress
    prometheus:
      auth:
        insecure_skip_verify: true
        type: bearer
        use_kiali_token: true
      query_scope:
        mesh_id: istio-system/istio-ossm-2-5
      url: 'https://thanos-querier.openshift-monitoring.svc.cluster.local:9091'
    tracing:
      query_timeout: 30
      enabled: true
      in_cluster_url: 'http://tempo-minio-dev-query-frontend.tempo-system.svc.cluster.local:16685'
      url: # TODO
      use_grpc: true
  installation_tag: 'Kiali [istio-system]'
  istio_namespace: istio-system
  version: default
